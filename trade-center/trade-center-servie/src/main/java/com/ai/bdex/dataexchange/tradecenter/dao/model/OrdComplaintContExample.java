package com.ai.bdex.dataexchange.tradecenter.dao.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OrdComplaintContExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public OrdComplaintContExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andComplaintContIdIsNull() {
            addCriterion("COMPLAINT_CONT_ID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdIsNotNull() {
            addCriterion("COMPLAINT_CONT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdEqualTo(Long value) {
            addCriterion("COMPLAINT_CONT_ID =", value, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdNotEqualTo(Long value) {
            addCriterion("COMPLAINT_CONT_ID <>", value, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdGreaterThan(Long value) {
            addCriterion("COMPLAINT_CONT_ID >", value, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdGreaterThanOrEqualTo(Long value) {
            addCriterion("COMPLAINT_CONT_ID >=", value, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdLessThan(Long value) {
            addCriterion("COMPLAINT_CONT_ID <", value, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdLessThanOrEqualTo(Long value) {
            addCriterion("COMPLAINT_CONT_ID <=", value, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdIn(List<Long> values) {
            addCriterion("COMPLAINT_CONT_ID in", values, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdNotIn(List<Long> values) {
            addCriterion("COMPLAINT_CONT_ID not in", values, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdBetween(Long value1, Long value2) {
            addCriterion("COMPLAINT_CONT_ID between", value1, value2, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintContIdNotBetween(Long value1, Long value2) {
            addCriterion("COMPLAINT_CONT_ID not between", value1, value2, "complaintContId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdIsNull() {
            addCriterion("COMPLAINT_ID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintIdIsNotNull() {
            addCriterion("COMPLAINT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintIdEqualTo(Long value) {
            addCriterion("COMPLAINT_ID =", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdNotEqualTo(Long value) {
            addCriterion("COMPLAINT_ID <>", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdGreaterThan(Long value) {
            addCriterion("COMPLAINT_ID >", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdGreaterThanOrEqualTo(Long value) {
            addCriterion("COMPLAINT_ID >=", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdLessThan(Long value) {
            addCriterion("COMPLAINT_ID <", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdLessThanOrEqualTo(Long value) {
            addCriterion("COMPLAINT_ID <=", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdIn(List<Long> values) {
            addCriterion("COMPLAINT_ID in", values, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdNotIn(List<Long> values) {
            addCriterion("COMPLAINT_ID not in", values, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdBetween(Long value1, Long value2) {
            addCriterion("COMPLAINT_ID between", value1, value2, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdNotBetween(Long value1, Long value2) {
            addCriterion("COMPLAINT_ID not between", value1, value2, "complaintId");
            return (Criteria) this;
        }

        public Criteria andFromRemarkIsNull() {
            addCriterion("FROM_REMARK is null");
            return (Criteria) this;
        }

        public Criteria andFromRemarkIsNotNull() {
            addCriterion("FROM_REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andFromRemarkEqualTo(String value) {
            addCriterion("FROM_REMARK =", value, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkNotEqualTo(String value) {
            addCriterion("FROM_REMARK <>", value, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkGreaterThan(String value) {
            addCriterion("FROM_REMARK >", value, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("FROM_REMARK >=", value, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkLessThan(String value) {
            addCriterion("FROM_REMARK <", value, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkLessThanOrEqualTo(String value) {
            addCriterion("FROM_REMARK <=", value, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkLike(String value) {
            addCriterion("FROM_REMARK like", value, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkNotLike(String value) {
            addCriterion("FROM_REMARK not like", value, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkIn(List<String> values) {
            addCriterion("FROM_REMARK in", values, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkNotIn(List<String> values) {
            addCriterion("FROM_REMARK not in", values, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkBetween(String value1, String value2) {
            addCriterion("FROM_REMARK between", value1, value2, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andFromRemarkNotBetween(String value1, String value2) {
            addCriterion("FROM_REMARK not between", value1, value2, "fromRemark");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeIsNull() {
            addCriterion("COMPLAINT_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeIsNotNull() {
            addCriterion("COMPLAINT_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeEqualTo(Short value) {
            addCriterion("COMPLAINT_TYPE =", value, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeNotEqualTo(Short value) {
            addCriterion("COMPLAINT_TYPE <>", value, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeGreaterThan(Short value) {
            addCriterion("COMPLAINT_TYPE >", value, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("COMPLAINT_TYPE >=", value, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeLessThan(Short value) {
            addCriterion("COMPLAINT_TYPE <", value, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeLessThanOrEqualTo(Short value) {
            addCriterion("COMPLAINT_TYPE <=", value, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeIn(List<Short> values) {
            addCriterion("COMPLAINT_TYPE in", values, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeNotIn(List<Short> values) {
            addCriterion("COMPLAINT_TYPE not in", values, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeBetween(Short value1, Short value2) {
            addCriterion("COMPLAINT_TYPE between", value1, value2, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintTypeNotBetween(Short value1, Short value2) {
            addCriterion("COMPLAINT_TYPE not between", value1, value2, "complaintType");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeIsNull() {
            addCriterion("COMPLAINTS_TIME is null");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeIsNotNull() {
            addCriterion("COMPLAINTS_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeEqualTo(Date value) {
            addCriterion("COMPLAINTS_TIME =", value, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeNotEqualTo(Date value) {
            addCriterion("COMPLAINTS_TIME <>", value, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeGreaterThan(Date value) {
            addCriterion("COMPLAINTS_TIME >", value, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("COMPLAINTS_TIME >=", value, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeLessThan(Date value) {
            addCriterion("COMPLAINTS_TIME <", value, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeLessThanOrEqualTo(Date value) {
            addCriterion("COMPLAINTS_TIME <=", value, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeIn(List<Date> values) {
            addCriterion("COMPLAINTS_TIME in", values, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeNotIn(List<Date> values) {
            addCriterion("COMPLAINTS_TIME not in", values, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeBetween(Date value1, Date value2) {
            addCriterion("COMPLAINTS_TIME between", value1, value2, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andComplaintsTimeNotBetween(Date value1, Date value2) {
            addCriterion("COMPLAINTS_TIME not between", value1, value2, "complaintsTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffIsNull() {
            addCriterion("UPDATE_STAFF is null");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffIsNotNull() {
            addCriterion("UPDATE_STAFF is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffEqualTo(String value) {
            addCriterion("UPDATE_STAFF =", value, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffNotEqualTo(String value) {
            addCriterion("UPDATE_STAFF <>", value, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffGreaterThan(String value) {
            addCriterion("UPDATE_STAFF >", value, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffGreaterThanOrEqualTo(String value) {
            addCriterion("UPDATE_STAFF >=", value, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffLessThan(String value) {
            addCriterion("UPDATE_STAFF <", value, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffLessThanOrEqualTo(String value) {
            addCriterion("UPDATE_STAFF <=", value, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffLike(String value) {
            addCriterion("UPDATE_STAFF like", value, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffNotLike(String value) {
            addCriterion("UPDATE_STAFF not like", value, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffIn(List<String> values) {
            addCriterion("UPDATE_STAFF in", values, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffNotIn(List<String> values) {
            addCriterion("UPDATE_STAFF not in", values, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffBetween(String value1, String value2) {
            addCriterion("UPDATE_STAFF between", value1, value2, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateStaffNotBetween(String value1, String value2) {
            addCriterion("UPDATE_STAFF not between", value1, value2, "updateStaff");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andCreateStaffIsNull() {
            addCriterion("CREATE_STAFF is null");
            return (Criteria) this;
        }

        public Criteria andCreateStaffIsNotNull() {
            addCriterion("CREATE_STAFF is not null");
            return (Criteria) this;
        }

        public Criteria andCreateStaffEqualTo(String value) {
            addCriterion("CREATE_STAFF =", value, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffNotEqualTo(String value) {
            addCriterion("CREATE_STAFF <>", value, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffGreaterThan(String value) {
            addCriterion("CREATE_STAFF >", value, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffGreaterThanOrEqualTo(String value) {
            addCriterion("CREATE_STAFF >=", value, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffLessThan(String value) {
            addCriterion("CREATE_STAFF <", value, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffLessThanOrEqualTo(String value) {
            addCriterion("CREATE_STAFF <=", value, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffLike(String value) {
            addCriterion("CREATE_STAFF like", value, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffNotLike(String value) {
            addCriterion("CREATE_STAFF not like", value, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffIn(List<String> values) {
            addCriterion("CREATE_STAFF in", values, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffNotIn(List<String> values) {
            addCriterion("CREATE_STAFF not in", values, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffBetween(String value1, String value2) {
            addCriterion("CREATE_STAFF between", value1, value2, "createStaff");
            return (Criteria) this;
        }

        public Criteria andCreateStaffNotBetween(String value1, String value2) {
            addCriterion("CREATE_STAFF not between", value1, value2, "createStaff");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 17 20:54:45 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_ord_complaint_cont
     *
     * @mbg.generated Mon Apr 17 20:54:45 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}